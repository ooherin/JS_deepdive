js 엔진은 단 하나의 실행 컨텍스트 스택을 갖는다. 한 번에 하나의 테스크만 실행하는 '싱글 스레드'방식으로 
동작한다는 의미이다.
시간이 걸리는 태스크를 실행하는 경우 뒤의 태스크가 블로킹(작업 중단)된다.

예제와 같이 현재 실행 중인 태스크가 끝날 때까지 다음 태스크가 대기하는 방식을 동기 처리라고 한다.
앞 태스크가 시간이 걸릴 경우 뒤 태스크가 블로킹 된다는 단점이 있다.

반대로 비동기 처리 방식은 현재 실행 중인 태스크가 종료되지 않은 상태더라도 다음 태스크를 처리하는 것을
말한다.setTimtout같은 함수의 처리방식이다.
동기 처리 방식은 처리 순서가 보장되나, 비동기 처리 방식은 순서가 보장 되지 않는다.
비동기 처리 방식은 가독성이 나빠질 수 있는 콜백을 사용해,
이보다 '프로미스'같은 문법을 사용하자

비동기 처리 방식 : setTimeout, setInterval, HTTP요청, 이벤트핸들러

# 이벤트 루프와 태스크 큐
js는 싱글 스레드로 동작한다. 하지만 동시에 여러일을 처리하는 것처럼 보이는 이유는
이벤트 루프라는 브라우저 내장 기능 때문이다.

js엔진은 2개로 구분 가능
1. 콜 스택 : 실행 컨텍스트 스택이 콜 스택이다. 하나의 콜스택을 사용해서 최상위에 있는 실행 컨텍스트
만 실행된다.
2. 힙 : 객체가 저장되는 메모리 공간을 말한다.
콜스택의 요소인 실행 컨텍스트는 힙에 저장된 객체를 참조한다.

비동기 처리는 js엔진을 구동하는 환경인 브라우저 또는 Node.js가 담당한다. 
이 브라우저 환경은 태스크 큐와 이벤트 루프를 제공한다.

(1) 태스크 큐 : 콜백 함수 또는 이벤트 핸들러가 보관되는 영역이다. 
마이크로태스크 큐는 별도로 프로미스의 후속 처리 메서드의 콜백 함수가 일시적으로 보관된다.

(3) 이벤트 루프 : 이벤트 루프는 콜 스택에 현재 실행 중인 실행 컨텍스트가 있는지, 태스크 큐에 대기중인
함수가 있는지 계속 확인한다. 만약 콜 스택이 비어 있고 태스크 큐에 대기 중인 함수가 있다면 
이벤트 루프는 순차적으로 <태스크 큐>(대기방)에 대기 중인 함수를 <콜 스택(실행방)>으로 이동시킨다.

js는 싱글 스레드 방식으로 동작하나 이는 자바스크립트 엔진이고, 브라우저가 아니다. 브라우저는 멀티 스레드로
동작하며, 이는 js가 비동기로 동작할 수 있는 이유이다.

