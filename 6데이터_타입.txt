데이터 타입(7개)에는 원시타입과 객체타입이 있다.
원시타입 : 숫자, 문자열, 불리언, undefined, null, 심벌
객체타입 : 객체, 함수, 배열 ..

1.원시타입

<숫자 타입>
js는 모든 수를 실수로 표현하며, 정수로 표현하기 위한 데이터 타입이 별도로 존재x
특별한 숫자 값 : NaN(not a number), infinity, -infinity

<문자열 타입>
'' "" ``
문자열은 원시값이므로 변경 불가능하다. 
``의 유용성
1)${}으로 표현식을 삽입할 수 있다. (보통은 '문자열' + 값 으로 연결한다. )
2)개행이 가능하다.

<undefined>
undefined는 컴퓨터가 값 할당 전에 넣어놓은 임시값이다.
변수 참조시 undefined가 반환되면 그 변수에 값이 할당되기 전이라는 것을 알 수 있다. 

<null>
null은 변수에 값이 의도적으로 없다는 것을 알리기 위해 사용한다. 
또한 이전에 참조하던 값을 더이상 참조하지 않겠다고 알리는 것.

<심벌>
다른 값과 중복되지 않은 유일무이한 값이다. 
객체의 유일한 프로퍼티 키를 만들기 위해 사용된다. 

2.객체타입
위 원시값을 제외한 모든 값은 객체이다.

_______________________________________________________________

데이터 타입이 필요한 이유
1. 값을 저장할 때 확보할 메모리 크기를 정하려고
2. 값을 참조할 때 읽을 메모리 크기를 정하려고
3. 메모리에서 읽은 2진수를 어떤 타입으로 해석할지 정하려고

정적타입언어는 변수의 타입을 변경할 수 없으며, 변수에 선언한 타입에 맞는 값만 할당 가능.
동적타입언어인 js는 변수를 선언할 때 타입을 명시하지x -> 변수에 어떤 타입의 값을 할당할지는 자유

typeof라는 연산자를 통해 변수에 할당된 값의 데이터 타입을 알 수 있다.
ex) var foo; console.log(typeof foo); //undefined(할당되지 않은 변수)

동적타입언어인 js를 사용할 때 주의할 점.
1. 변수는 꼭 필요할 때만 제한적으로 사용
2 변수의 유효 범위인 스코프를 좁게 만들어 사용
3. 전역 변수 사용은 자제
4. 변수(let)보다는 상수(const)를 사용. 상수 쓰다가 나중에 변수로 바꿔도 됨.
5. 변수의 이름은 고심해서 지을 것. 