함수가 일급 객체인 이유
1. 함수는 무명의리터럴로 생성이 가능하다
2. 함수는 변수에 저장할 수 있다.
const increase = function(num){
    return num++;
}
const decrease = function(num){
    return num--;
}
const inde = {increase, decrease};

3.함수는 매개변수에 전달할 수 있다.
4.함수는 반환값으로 사용할 수 있다.
function makeCounter(inde){
    let num = 0;
    return function(){
        num = inde(num);
        return num;
    }
}

함수는 객체이고, 객체는 값이므로, 함수는 값과 동일하게 사용할 수 있다.
함수는 일반 객체와 달리 호출할 수 있으며,
함수 객체에는 일반 객체가 없는 프로퍼티도 있다. 

함수 고유의 프로퍼티 : arguments, caller, length, name

1. arguments: 함수 호출시 전달된 인들의 정보를 담은 유사배열 객체
-자바스크립트에서는 매개변수와 인수의 개수와 같은지 확인하지 않는다.
-선언된 매개변수보다 인수를 적게 전달했을 경우, 전달되지 않은 매개변수는 undefined
-매개변수의 개수보다 인수를 더 많이 전달한 경우 초과된 인수는 무시된다(에러x)
-초과된 인수는 버려지지 않는다. 
-arguments객체는 인수를 프로퍼티 값으로 소유하며 key는 인수의 순서(0,1,2..),
value는 인수의 값을 나타낸다.

arguments객체는 유사배열 객체로 for문,length의 사용이 가능하나, 배열 매서드를 그대로 사용할 
경우 에러가 발생한다.

2.length : 함수를 정의할 때 선언한 매개변수의 개수를 가리킴

3. name : 함수 이름을 가리키며, 익명 함수의 경우 식별자를 가리킴
